<?php

/**
 *  @file
 *  Main file of WunderHub Client module.
 */

/**
 * Implements hook_menu().
 */
function wunderhub_client_menu() {
  $items = array();

  $items['team'] = array(
    'title' => 'Team',
    'access callback' => TRUE,
    'page callback' => 'wunderhub_client_team',
    'type' => MENU_CALLBACK,
  );

  $items['team/%'] = array(
    'title' => 'Team member',
    'access callback' => TRUE,
    'page callback' => 'wunderhub_client_team_member',
    'page arguments' => array(1),
    'type' => MENU_CALLBACK,
  );

  $items['admin/config/services/wunderhub'] = array(
    'title' => 'WunderHub Client',
    'description' => 'Configure URLs to WunderHub endpoints.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('wunderhub_client_settings'),
    'access arguments' => array('administer site configuration'),
    'file' => 'wunderhub_client.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_library().
 */
function wunderhub_client_library() {
  $libraries = array();

  $libraries['angularjs'] = array(
    'title' => 'AngularJS',
    'website' => 'https://angularjs.org',
    'version' => '1.3.4',
    'js' => array(
      '//ajax.googleapis.com/ajax/libs/angularjs/1.3.5/angular.min.js' => array(
        'external' => TRUE,
      ),
    ),
  );

  return $libraries;
}

/**
 * Implements hook_theme().
 */
function wunderhub_client_theme() {
  $module = drupal_get_path('module', 'wunderhub_client');

  return array(
    'wunderhub_client_team' => array(
      'render element' => 'element',
      'template' => 'wunderhub_client_team',
      'path' => $module . '/templates',
    ),
    'wunderhub_client_team_member' => array(
      'render element' => 'element',
      'template' => 'wunderhub_client_team_member',
      'path' => $module . '/templates',
    ),
  );
}

/**
 * Returns a list of team members.
 */
function wunderhub_client_team() {
  $settings = variable_get('wunderhub_client', array());

  if (empty($settings['team_url'])) {
    drupal_access_denied();
    drupal_exit();
  }

  $output = array();

  $output['team'] = array(
    '#theme' => 'wunderhub_client_team',
    '#title' => t('Team'),
    '#attached' => array(
      'library' => array(
        array('wunderhub_client', 'angularjs'),
      ),
      'js' => array(
        drupal_get_path('module', 'wunderhub_client') . '/js/wunderhub-client-team.js',
        array(
          'data' => array(
            'wunderhubClient' => array(
              'url' => $settings['team_url'],
            ),
          ),
          'type' => 'setting',
        ),
      ),
    ),
  );

  return $output;
}

/**
 * Returns a specific team member.
 */
function wunderhub_client_team_member($uid) {
  $settings = variable_get('wunderhub_client', array());

  if (!is_numeric($uid) || empty($settings['team_member_url'])) {
    drupal_access_denied();
    drupal_exit();
  }

  $output = array();

  $output['team_member'] = array(
    '#theme' => 'wunderhub_client_team_member',
    '#title' => t('Team member'),
    '#attached' => array(
      'library' => array(
        array('wunderhub_client', 'angularjs'),
      ),
      'js' => array(
        drupal_get_path('module', 'wunderhub_client') . '/js/wunderhub-client-team.js',
        array(
          'data' => array(
            'wunderhubClient' => array(
              'url' => $settings['team_member_url'],
              'uid' => $uid,
            ),
          ),
          'type' => 'setting',
        ),
      ),
    ),
  );

  return $output;
}

/**
 * Implements hook_preprocess_html().
 */
function wunderhub_client_preprocess_html(&$vars) {
  if (arg(0) == 'team') {
    $vars['attributes_array']['ng-app'] = 'wunderhub-client';
  }
}
